"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E",
"B19001A_001E"
)
) %>%
transmute(
tract = paste0(state, county, tract),
perc_college = 1 - (B06009_002E + B06009_003E) / B06009_001E,
perc_over100k = (B19001_014E + B19001_015E + B19001_016E + B19001_017E) / B19001_001E,
perc_white = B19001A_001E / B19001_001E
) %>%
filter(
!is.na(perc_college),
!is.na(perc_over100k),
!is.na(perc_white)
)
plot_ly(
data = bay_multiple_tract,
x=~perc_white,
y=~perc_college,
z=~perc_over100k,
type="scatter3d",
mode="markers",
color = ~perc_over100k)
plot_ly(
data = bay_multiple_tract,
x=~perc_white,
y=~perc_college,
z=~perc_over100k,
type="scatter3d",
mode="markers",
color = ~perc_over100k)
library(tidyverse)
library(censusapi)
library(sf)
library(mapview)
library(tigris)
library(readxl)
library(leaflet)
library(plotly)
Sys.setenv(CENSUS_KEY="c18a7f6e5cbbd1e7f0d3047d8b674cbaad89bcb3")
bay_multiple_tract <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B06009_001E",
"B06009_002E",
"B06009_003E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E",
"B19001A_001E"
)
) %>%
transmute(
tract = paste0(state, county, tract),
perc_college = 1 - (B06009_002E + B06009_003E) / B06009_001E,
perc_over100k = (B19001_014E + B19001_015E + B19001_016E + B19001_017E) / B19001_001E,
perc_white = B19001A_001E / B19001_001E
) %>%
filter(
!is.na(perc_college),
!is.na(perc_over100k),
!is.na(perc_white)
)
plot_ly(
data = bay_multiple_tract,
x=~perc_white,
y=~perc_college,
z=~perc_over100k,
type="scatter3d",
mode="markers",
color = ~perc_over100k)
knitr::opts_chunk$set(echo = TRUE)
library(censusapi)
library(tidyverse)
library(tigris)
library(sf)
library(leaflet)
Sys.setenv(CENSUS_KEY="c18a7f6e5cbbd1e7f0d3047d8b674cbaad89bcb3")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"AGEP",
"SCHL",
"PINCP",
"RAC1P",
"HISP",
"LANX"
)
)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
sf_county <-
counties("CA", "Santa Francisco", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
sf_county <-
counties("CA", "San Francisco", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
sf_county <-
county("CA", "San Francisco", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
sf_county <-
counties("CA", "San Francisco", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP",
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP",
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP",
)
)
setwd("~/Documents/GitHub/ctbeck.github.io")
setwd("~/Documents/GitHub/ctbeck.github.io")
saveRDS(pums_2019_1yr, "a6_pums.rds")
pums_2019_1yr <- readRDS("a6_pums.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
sf_county <-
counties("CA", "San Francisco", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
class(sf_pums$YBL)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
class(sf_pums$YBL)
sf_pums_clean <- sf_pums %>%
filter(YBL %in% c("1", "2", "3"))
pums_2019_1yr <- readRDS("a6_pums.rds")
Filter down to San Francisco PUMAS
pums_2019_1yr <- readRDS("a6_pums.rds")
##Filter down to San Francisco PUMAS
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
sf_pums_clean <- sf_pums %>%
filter(YBL %in% c("1", "2", "3"))
sf_pums_clean <- sf_pums %>%
filter(as.numeric(YBL) %in% 1:3)
View(sf_pums)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP",
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP",
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP"
)
)
View(pums_2019_1yr)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06"
pums_2019_1yr <- getCensus(
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP"
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"YBL",
"BLD",
"TEN",
"MV",
"HINCP",
"AGEP"
)
)
saveRDS(pums_2019_1yr, "a6_pums.rds")
pums_2019_1yr <- readRDS("a6_pums.rds")
##Filter down to San Francisco PUMAS
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
sf_pums_clean <- sf_pums %>%
filter(as.numeric(YBL) %in% 1:3)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
sf_income_child <-
sf_pums %>%
mutate(
ACEP = as.numeric(ACEP)
) %>%
mutate(
HINCP = as.numeric(HINCP)
) %>%
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
group_by(SERIALNO) %>%
summarize_all(first)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
group_by(SERIALNO)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
group_by(SERIALNO) %>%
summarize_all(first)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
group_by(SERIALNO) %>%
summarize_all(first)
View(sf_pums)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
group_by(SERIALNO)
pums_2019_1yr <- readRDS("a6_pums.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10)
##filtering the households built before 1960 (codes 1-3)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
group_by(SERIALNO) %>%
summarize_all(first)
sf_pums_clean <- sf_pums %>%
mutate(
YBL = as.numeric(YBL)
) %>%
filter(YBL %in% 1:3)
arrange(AGEP)
View(pums_2019_1yr)
