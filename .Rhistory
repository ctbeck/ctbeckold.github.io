st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_blocks_2020
smc_pop_race_2020 %>%
left_join(smc_pop_race_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_pop_race_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_blocks_2020
smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_pop_race_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_blocks_2020
smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
## left_join(smc_pop_race_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_blocks_2020
smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
mapview(la_pop_2020, zcol = "pop")
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_blocks_2020
smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
mapview(smc_blocks_2020, zcol = "pop")
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_blocks_2020
smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
mapview(la_pop_2020, zcol = "pop")
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <-  smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
mapview(la_pop_2020, zcol = "pop")
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <-  smc_pop_race_2020 %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
mapview(la_pop_2020, zcol = "pop") + mapview(smc_blocks_2020, alpha.regions = 0)
smc_pop_race_2020 <- smc_pop_race_2020 %>%
View(smc_pop_race_2020)
View(smc_pop_race_2010)
smc_pop_race_2020 <- smc_pop_race_2020 %>%
View(smc_blocks_2020)
View(smc_pop_2020)
View(smc_pop_2020)
View(smc_pop_2020)
View(smc_pop_2020)
View(smc_pop_2020)
View(smc_pop_2020)
View(smc_pop_2020)
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_pop_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
la_boundary
a_pop_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020, by = c("GEOID20"= "GEOID")) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf()
View(la_boundary)
View(la_boundary)
la_pop_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
select(GEOID20) %>%
left_join(smc_pop_race_2020)
smc_blocks_2020 <- blocks("CA", "Santa Clara", year = 2020, progress_bar = F)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
select(GEOID20) %>%
left_join(smc_pop_race_2020)
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
select(GEOID20) %>%
left_join(smc_pop_race_2020)
la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>%
st_as_sf() %>%
select(GEOID20) %>%
left_join(smc_pop_race_2020)
la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
select(GEOID20) %>%
la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
select(GEOID20) %>%
left_join(smc_pop_race_2020)
colnames(smc_pop_race_2020)
la_pop_2020 <- smc_pop_2020 %>%
##la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
select(GEOID20) %>%
left_join(smc_pop_race_2020)
la_pop_2020 <- smc_pop_2020 %>%
la_blocks_2020 <-  smc_blocks_2020 %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
select(GEOID20) %>%
left_join(smc_pop_race_2020)
la_pop_2020 <- smc_pop_2020 %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
select(GEOID20) %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>%
```{r}
la_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Los Altos")
la_pop_2020 <- smc_pop_2020 %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>% ##when joining two cols you need to specify what cols to join across the two datasets
st_as_sf() %>%
st_centroid() %>%
.[la_boundary, ] %>%
st_drop_geometry()  %>%
select(GEOID20) %>%
left_join(smc_blocks_2020 %>% select(GEOID20)) %>%
mapview(la_pop_2020, zcol = "pop") ## mapview(smc_blocks_2020, alpha.regions = 0)
smc_pop_race_2020 <- smc_pop_race_2020 %>%
mutate(
race = case_when(
category1 == "Population of two or more races:" & is.na(category2) ~ "Two or more races",
category1 == "Population of two or more races:" ~ "",
!is.na(category2) ~ category2,
TRUE ~ ""
)
)
smc_pop_race_2020 <- smc_pop_race_2020 %>%
mutate(
race = case_when(
category1 == "Population of two or more races:" & is.na(category2) ~ "Two or more races",
category1 == "Population of two or more races:" ~ "",
!is.na(category2) ~ category2,
TRUE ~ ""
)
)
setwd("~/")
setwd("~/Documents/GitHub/ctbeck.github.io")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(tidycensus)
library(leaflet)
Sys.setenv(CENSUS_KEY ="c18a7f6e5cbbd1e7f0d3047d8b674cbaad89bcb3")
temp <- tempfile()
download.file("https://www2.census.gov/programs-surveys/acs/data/pums/2019/1-Year/csv_hca.zip",destfile = temp)
pums_hca_2019_1yr <- read_csv(unzip(temp,"psam_h06.csv"))
unlink(temp)
View(pums_hca_2019_1yr)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN"
)
)
saveRDS(pums_2019_1yr, "pums_2019_1yr.rds")
pums_2019_1yr <- readRDS("pums_2019_1yr.rds")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HHL",
"HINCP",
"TEN"
)
)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
saveRDS(bay_pums, "bay_pums.rds")
bay_pums <- readRDS("baypums.rds")
bay_pums <- readRDS("bay_pums.rds")
bay_pums_age <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
multigen_renter_lowinc = ifelse(
(HHL != 1) &
(TEN == 3) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_multigen_renter_lowinc =
sum(multigen_renter_lowinc, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal <- colorNumeric(
palette = "Oranges",
domain = bay_pums_age$perc_multigen_renter_lowinc
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_age,
fillColor = ~pums_pal(perc_multigen_renter_lowinc),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_multigen_renter_lowinc),
"% Multigenerational renter households making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_age,
pal = pums_pal,
values = ~perc_multigen_renter_lowinc,
title = "% Multigenerational<br>renter households<br>making less than $100K"
)
pums_pal <- colorNumeric(
palette = "Reds",
domain = bay_pums_age$perc_multigen_renter_lowinc
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_age,
fillColor = ~pums_pal(perc_multigen_renter_lowinc),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_multigen_renter_lowinc),
"% Multigenerational renter households making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_age,
pal = pums_pal,
values = ~perc_multigen_renter_lowinc,
title = "% Multigenerational<br>renter households<br>making less than $100K"
)
knitr::opts_chunk$set(echo = F)
pums_pal <- colorNumeric(
palette = "Reds",
domain = bay_pums_age$perc_multigen_renter_lowinc
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_age,
fillColor = ~pums_pal(perc_multigen_renter_lowinc),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(perc_multigen_renter_lowinc),
"% Multigenerational renter households making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_age,
pal = pums_pal,
values = ~perc_multigen_renter_lowinc,
title = "% Multigenerational<br>renter households<br>making less than $100K"
)
bay_pums <- readRDS("bay_pums.rds")
bay_pumas <- readRDS("bay_pumas.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% bay_pumas$PUMACE10)
saveRDS(bay_pums, "bay_pums.rds")
saveRDS(bay_pumas, "bay_pumas.rds")
bay_pums <- readRDS("bay_pums.rds")
bay_pumas <- readRDS("bay_pumas.rds")
bay_pums_age <-
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
multigen_renter_lowinc = ifelse(
(HHL != 1) &
(TEN == 3) &
(HINCP < 100000),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(
perc_multigen_renter_lowinc =
sum(multigen_renter_lowinc, na.rm =T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
setwd("~/Documents/GitHub/ctbeck.github.io")
